# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, inputs, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    "${inputs.nixos-hardware}/framework/13-inch/7040-amd"
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = { xfs = true; };

  fileSystems."/persistent" =
    { device = "/dev/disk/by-uuid/ca79f433-163a-4c5c-b176-8e694a674dda";
      fsType = "xfs";
      neededForBoot = true;
    };
  fileSystems."/nix" = {
    device = "/persistent/nix";
    fsType = "none";
    depends = ["/persistent"];
    options = ["bind"];
  };
  fileSystems."/" =
    { device = "none";
      fsType = "tmpfs";
      options = [ "size=32G" "defaults" "mode=755"];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DA11-68A6";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" "noauto" "x-systemd.automount" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/96c380b3-4498-4eb8-8a18-5eebe2a41428"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.interfaces.enp195s0f3u1u3.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
